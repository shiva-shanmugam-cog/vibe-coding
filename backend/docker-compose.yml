version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: vibepass
      POSTGRES_USER: vibe
      POSTGRES_DB: vibe_audit
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  audit-service:
    build:
      context: .
      dockerfile: audit-service/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/vibe_audit
      SPRING_DATASOURCE_USERNAME: vibe
      SPRING_DATASOURCE_PASSWORD: vibepass
    depends_on:
      - postgres
    ports:
      - "8082:8082"

  agent-gateway:
    build:
      context: .
      dockerfile: agent-gateway/Dockerfile
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWKS_URI: http://keycloak:8081/realms/demo/protocol/openid-connect/certs
    depends_on:
      - kafka
      - audit-service
    ports:
      - "8080:8080"

  # Optional: run agents as separate services instead of in-process
  onboarding-agent:
    build:
      context: .
      dockerfile: agents/onboarding-agent/Dockerfile
    environment:
      SERVER_PORT: 8081
    ports:
      - "8081:8081"

  fraud-detection-agent:
    build:
      context: .
      dockerfile: agents/fraud-detection-agent/Dockerfile
    environment:
      SERVER_PORT: 8083
    ports:
      - "8083:8083"

volumes:
  pgdata: {} 